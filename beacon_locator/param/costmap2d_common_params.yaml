
subscribe_to_updates: true
map_type: voxel

# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
robot_radius: 0.19  # distance a circular robot should be clear of the obstacle (kobuki: 0.18)

track_unknown_space:  true
global_frame: /map
robot_base_frame: /base_footprint
update_frequency: 4.0
publish_frequency: 0.2
static_map: true # this just makes move_base use an external map (e.g. from gmapping) instead of generating its own
transform_tolerance: 3.5
plugins:
 - {name: static_layer,            type: "costmap_2d::StaticLayer"}
 - {name: obstacle_layer,          type: "costmap_2d::VoxelLayer"}
 - {name: inflation_layer,         type: "costmap_2d::InflationLayer"}

#cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
inflation_layer:
  enabled:              true
  cost_scaling_factor:  5.0  # exponential rate at which the obstacle cost drops off (default: 10)
  inflation_radius:     0.5  # max. distance from an obstacle at which costs are incurred for planning paths.

static_layer:
  map_topic:            "map"
  enabled:              true
  unknown_cost_value:   true
  lethal_cost_threshold: true

obstacle_layer:
  enabled:              true
  max_obstacle_height:  0.6
  origin_z:             0.2
  z_resolution:         0.2
  z_voxels:             2
  unknown_threshold:    0
  mark_threshold:       0
  combination_method:   0 # 0 seems better? id0 seems better? idkk
  track_unknown_space:  true #true needed for disabling global path planning through unknown space
  obstacle_range: 2.5
  raytrace_range: 3.0
  publish_voxel_map: false
  observation_sources:  scan bump
  scan:
    data_type: LaserScan
    topic: scan
    marking: true
    clearing: true
    min_obstacle_height: 0.0
    max_obstacle_height: 0.5
  bump:
    data_type: PointCloud2
    topic: mobile_base/sensors/bumper_pointcloud
    marking: true
    clearing: false
    min_obstacle_height: 0.0
    max_obstacle_height: 0.15
  # for debugging only, let's you see the entire voxel grid

